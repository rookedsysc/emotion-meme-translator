services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile-frontend
    restart: unless-stopped
    expose:
      - "5173"
        #    volumes:
      #      - ./frontend:/app
        #      - ./frontend/node_modules:/app/node_modules
        #      - ./frontend:/app
        #      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/meme/var/app/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /home/meme/var/app/certbot/conf:/etc/letsencrypt
      - /home/meme/var/app/certbot/www:/var/www/certbot
      - /home/meme/var/app/logs:/var/log/nginx
    depends_on:
      - frontend
    networks:
      app-network:
        ipv4_address: 172.21.0.5


  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    #cerbot 인증서 갱신 
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 60d & wait $${!}; done;'"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile-backend
    ports:
      - "8080:8080"
    networks:
      app-network:
        ipv4_address: 172.21.0.10

  db:
    build:
      context: ./db
      dockerfile: Dockerfile-db
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      app-network:
        ipv4_address: 172.21.0.30

          #  jenkins:
          #build:
          #context: ./jenkins
          #dockerfile: Dockerfile-jenkins
          #restart: unless-stopped
          #ports:
          #- "8888:2024"
          #volumes:
          #- ./jenkins:/var/jenkins_home
          #- /var/run/docker.sock:/var/run/docker.sock
          #environment:
          #- JENKINS_OPTS=--httpPort=2024
  
networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16

volumes:
  db:

    ##testtest
